/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package RMS;

import java.awt.Color;
import java.awt.Desktop;
import java.awt.event.KeyEvent;
import java.awt.print.PrinterException;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author OBAID
 */
public class frmsalesreport extends javax.swing.JFrame {

    /**
     * Creates new form frmsalesreport
     */
    public frmsalesreport() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.getContentPane().setBackground(new Color(255, 255, 255));
        DefaultTableCellRenderer MyHeaderRender = new DefaultTableCellRenderer();
        MyHeaderRender.setBackground(new Color(0, 0, 0));
        MyHeaderRender.setForeground(new Color(255, 255, 255));
        tblreport.getTableHeader().getColumnModel().getColumn(0).setHeaderRenderer(MyHeaderRender);
        tblreport.getTableHeader().getColumnModel().getColumn(1).setHeaderRenderer(MyHeaderRender);
        tblreport.getTableHeader().getColumnModel().getColumn(2).setHeaderRenderer(MyHeaderRender);
        tblreport.getTableHeader().getColumnModel().getColumn(3).setHeaderRenderer(MyHeaderRender);
        tblreport.getTableHeader().getColumnModel().getColumn(4).setHeaderRenderer(MyHeaderRender);
        tblreport.getTableHeader().getColumnModel().getColumn(5).setHeaderRenderer(MyHeaderRender);
        txtinvoice.setEnabled(false);
        txtdelete.setEnabled(false);
        try {
            BufferedReader br = new BufferedReader(new FileReader("Files/Sales report.txt"));
            DefaultTableModel model = (DefaultTableModel) tblreport.getModel();
            Object[] tableLines = br.lines().toArray();
            for (int i = 0; i < tableLines.length; i++) {
                String line = tableLines[i].toString().trim();
                String[] dataRow = line.split(",");
                model.addRow(dataRow);
            }

        } catch (Exception ex) {

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblreport = new javax.swing.JTable();
        btnopen = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        btnclose = new javax.swing.JButton();
        txtinvoice = new javax.swing.JTextField();
        chksearch = new javax.swing.JCheckBox();
        txtdelete = new javax.swing.JTextField();
        chkdelete = new javax.swing.JCheckBox();
        btnprint = new javax.swing.JButton();
        btnexcel = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        tblreport.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Invoice no", "Date", "Customer name", "Phone no", "Discount", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblreport.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblreport);

        btnopen.setIcon(new javax.swing.ImageIcon("D:\\Restaurant Managment System Oop Project\\RMS\\Resources\\pdf.png")); // NOI18N
        btnopen.setText("Open");
        btnopen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnopenActionPerformed(evt);
            }
        });
        btnopen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnopenKeyPressed(evt);
            }
        });

        btndelete.setIcon(new javax.swing.ImageIcon("D:\\Restaurant Managment System Oop Project\\RMS\\Resources\\minus.png")); // NOI18N
        btndelete.setText("Delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });
        btndelete.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btndeleteKeyPressed(evt);
            }
        });

        btnclose.setIcon(new javax.swing.ImageIcon("D:\\Restaurant Managment System Oop Project\\RMS\\Resources\\close.png")); // NOI18N
        btnclose.setText("Close");
        btnclose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncloseActionPerformed(evt);
            }
        });
        btnclose.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btncloseKeyPressed(evt);
            }
        });

        txtinvoice.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtinvoice.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtinvoice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtinvoice.setNextFocusableComponent(btnopen);
        txtinvoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtinvoiceActionPerformed(evt);
            }
        });
        txtinvoice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtinvoiceKeyPressed(evt);
            }
        });

        chksearch.setText("Search");
        chksearch.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chksearchStateChanged(evt);
            }
        });
        chksearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chksearchActionPerformed(evt);
            }
        });

        txtdelete.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtdelete.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtdelete.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtdelete.setNextFocusableComponent(btndelete);
        txtdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdeleteActionPerformed(evt);
            }
        });
        txtdelete.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtdeleteKeyPressed(evt);
            }
        });

        chkdelete.setText("Delete");
        chkdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkdeleteActionPerformed(evt);
            }
        });

        btnprint.setIcon(new javax.swing.ImageIcon("D:\\Restaurant Managment System Oop Project\\RMS\\Resources\\printer.png")); // NOI18N
        btnprint.setText("Print");
        btnprint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnprintActionPerformed(evt);
            }
        });
        btnprint.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnprintKeyPressed(evt);
            }
        });

        btnexcel.setIcon(new javax.swing.ImageIcon("D:\\Restaurant Managment System Oop Project\\RMS\\Resources\\excel.png")); // NOI18N
        btnexcel.setText("Export to Excel");
        btnexcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnexcelActionPerformed(evt);
            }
        });
        btnexcel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnexcelKeyPressed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Sales Report");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(chksearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtinvoice, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addComponent(chkdelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtdelete, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)))
                .addGap(14, 14, 14))
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(btnprint, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnexcel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnopen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btndelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnclose)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chksearch)
                    .addComponent(txtdelete, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkdelete)
                    .addComponent(txtinvoice, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnopen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btndelete, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnclose, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnprint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnexcel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnclose, btndelete});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btncloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncloseActionPerformed
        dispose();
        //new frmdashboard().setVisible(true);
    }//GEN-LAST:event_btncloseActionPerformed

    private void txtinvoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtinvoiceActionPerformed

    }//GEN-LAST:event_txtinvoiceActionPerformed

    private void txtinvoiceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtinvoiceKeyPressed
        DefaultTableModel model = (DefaultTableModel) tblreport.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<>(model);
        tblreport.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(txtinvoice.getText().trim()));

    }//GEN-LAST:event_txtinvoiceKeyPressed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed

        String id = txtdelete.getText();
        DefaultTableModel model = (DefaultTableModel) tblreport.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            if (((String) model.getValueAt(i, 0)).equals(id)) {
                model.removeRow(i);
                File Obj = new File("Files/Sales invoice/" + id + ".pdf");
                Obj.delete();
                JOptionPane.showMessageDialog(this, "Record Deleted Successfully");
                String total="0";
                for (int a = 0; a < tblreport.getRowCount(); a++) {

                    double Amount = Double.parseDouble(tblreport.getValueAt(a, 5) + "");
                    total = String.valueOf(Amount + Double.parseDouble(total));
                }
                FileWriter myWriter;
                try {
                    myWriter = new FileWriter("Resources/TotalSales.txt");
                    myWriter.write("");
                    myWriter.write(total);
                    myWriter.close();
                } catch (IOException ex) {
                    Logger.getLogger(frmsalesreport.class.getName()).log(Level.SEVERE, null, ex);
                }
                    
                txtdelete.setText("");
                try {
                    File myObj = new File("Files/Sales report.txt");
                    Boolean result = myObj.createNewFile();
                    if (result) {
                        FileWriter fw = new FileWriter("Files/Sales report.txt");
                        BufferedWriter bw = new BufferedWriter(fw);

                        for (int r = 0; r < tblreport.getRowCount(); r++) {
                            for (int j = 0; j < tblreport.getColumnCount(); j++) {
                                bw.write(tblreport.getModel().getValueAt(r, j) + ",");
                            }
                            bw.write("\n");
                        }
                        bw.close();
                        fw.close();
                    } else {
                        FileWriter myobj = new FileWriter("Files/Sales report.txt");
                        myobj.write("");
                        myobj.close();
                        FileWriter a = new FileWriter("Files/Sales report.txt");
                        BufferedWriter b = new BufferedWriter(a);

                        for (int c = 0; c < tblreport.getRowCount(); c++) {
                            for (int j = 0; j < tblreport.getColumnCount(); j++) {
                                b.write(tblreport.getModel().getValueAt(c, j) + ",");
                            }
                            b.write("\n");
                        }
                        b.close();
                        a.close();
                    }
                    
                } catch (IOException e) {
                    System.out.println("An error occurred.");
                    e.printStackTrace();
                }
                break;
            } 
        }
    }//GEN-LAST:event_btndeleteActionPerformed

    private void txtdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdeleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdeleteActionPerformed

    private void txtdeleteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtdeleteKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdeleteKeyPressed

    private void chksearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chksearchActionPerformed
        if (chksearch.isSelected() == true) {
            txtinvoice.setEnabled(true);
            txtdelete.setEnabled(false);
            chkdelete.setSelected(false);
            txtdelete.setText("");
            txtinvoice.requestFocus();
        } else {
            txtinvoice.setText("");
            txtinvoice.setEnabled(false);

        }
    }//GEN-LAST:event_chksearchActionPerformed

    private void chkdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkdeleteActionPerformed
        if (chkdelete.isSelected() == true) {
            txtdelete.setEnabled(true);
            txtinvoice.setEnabled(false);
            chksearch.setSelected(false);
            txtinvoice.setText("");
            txtdelete.requestFocus();
        } else {
            txtdelete.setText("");
            txtdelete.setEnabled(false);
        }
    }//GEN-LAST:event_chkdeleteActionPerformed

    private void chksearchStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chksearchStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_chksearchStateChanged

    private void btnopenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnopenActionPerformed
        String search = txtinvoice.getText();
        if (Desktop.isDesktopSupported()) {
            try {
                File myFile = new File("Files/Sales invoice/" + search + ".pdf");
                Desktop.getDesktop().open(myFile);
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this, "Error!");
            }
        }
    }//GEN-LAST:event_btnopenActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated


    }//GEN-LAST:event_formWindowActivated

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

    }//GEN-LAST:event_formWindowOpened

    private void btnprintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnprintActionPerformed
        try {
            tblreport.print();
        } catch (PrinterException ex) {
            Logger.getLogger(frmsalesreport.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnprintActionPerformed

    private void btnprintKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnprintKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                tblreport.print();
            } catch (PrinterException ex) {
                Logger.getLogger(frmsalesreport.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnprintKeyPressed

    private void btnopenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnopenKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String search = txtinvoice.getText();
            if (Desktop.isDesktopSupported()) {
                try {
                    File myFile = new File("Files/Sales invoice/" + search + ".pdf");
                    Desktop.getDesktop().open(myFile);
                } catch (IOException e) {
                    JOptionPane.showMessageDialog(this, "Error!");
                }
            }
        }
    }//GEN-LAST:event_btnopenKeyPressed

    private void btndeleteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btndeleteKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String id = txtdelete.getText();
            DefaultTableModel model = (DefaultTableModel) tblreport.getModel();
            for (int i = 0; i < model.getRowCount(); i++) {
                if (((String) model.getValueAt(i, 0)).equals(id)) {
                    model.removeRow(i);
                    File Obj = new File("Files/Sales invoice/" + id + ".pdf");
                    Obj.delete();
                    JOptionPane.showMessageDialog(this, "Record Deleted Successfully");
                    String total = "0";
                    for (int a = 0; a < tblreport.getRowCount(); a++) {

                        double Amount = Double.parseDouble(tblreport.getValueAt(a, 5) + "");
                        total = String.valueOf(Amount + Double.parseDouble(total));
                    }
                    FileWriter obj;
                    try {
                        obj = new FileWriter("Resources/TotalSales.txt");
                        obj.write("");
                        obj.write(total);
                        obj.close();
                    } catch (IOException ex) {
                        Logger.getLogger(frmsalesinvoice.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    txtdelete.setText("");
                    try {
                        File myObj = new File("Files/Sales report.txt");
                        Boolean result = myObj.createNewFile();
                        if (result) {
                            FileWriter fw = new FileWriter("Files/Sales report.txt");
                            BufferedWriter bw = new BufferedWriter(fw);

                            for (int r = 0; r < tblreport.getRowCount(); r++) {
                                for (int j = 0; j < tblreport.getColumnCount(); j++) {
                                    bw.write(tblreport.getModel().getValueAt(r, j) + ",");
                                }
                                bw.write("\n");
                            }
                            bw.close();
                            fw.close();
                        } else {
                            FileWriter myobj = new FileWriter("Files/Sales report.txt");
                            myobj.write("");
                            myobj.close();
                            FileWriter a = new FileWriter("Files/Sales report.txt");
                            BufferedWriter b = new BufferedWriter(a);

                            for (int c = 0; c < tblreport.getRowCount(); c++) {
                                for (int j = 0; j < tblreport.getColumnCount(); j++) {
                                    b.write(tblreport.getModel().getValueAt(c, j) + ",");
                                }
                                b.write("\n");
                            }
                            b.close();
                            a.close();
                        }
                    } catch (IOException e) {
                        System.out.println("An error occurred.");
                        e.printStackTrace();
                    }
                    break;
                } 
            }
        }
    }//GEN-LAST:event_btndeleteKeyPressed

    private void btncloseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btncloseKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            dispose();
            //new frmdashboard().setVisible(true);
        }
    }//GEN-LAST:event_btncloseKeyPressed

    private void btnexcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnexcelActionPerformed
        FileWriter out = null;
        try {
            TableModel model = tblreport.getModel();
            out = new FileWriter("Files/Salesreport.xls");
            BufferedWriter bw = new BufferedWriter(out);
            for (int i = 0; i < model.getColumnCount(); i++) {
                bw.write(model.getColumnName(i) + "\t");
            }
            bw.write("\n");
            for (int i = 0; i < model.getRowCount(); i++) {
                for (int j = 0; j < model.getColumnCount(); j++) {
                    bw.write(model.getValueAt(i, j) + "\t");
                }
                bw.write("\n");
            }
            bw.close();
        } catch (IOException ex) {
            Logger.getLogger(frmsalesreport.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                out.close();
            } catch (IOException ex) {
                Logger.getLogger(frmsalesreport.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnexcelActionPerformed

    private void btnexcelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnexcelKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            FileWriter out = null;
            try {
                TableModel model = tblreport.getModel();
                out = new FileWriter("Files/Salesreport.xls");
                BufferedWriter bw = new BufferedWriter(out);
                for (int i = 0; i < model.getColumnCount(); i++) {
                    bw.write(model.getColumnName(i) + "\t");
                }
                bw.write("\n");
                for (int i = 0; i < model.getRowCount(); i++) {
                    for (int j = 0; j < model.getColumnCount(); j++) {
                        bw.write(model.getValueAt(i, j) + "\t");
                    }
                    bw.write("\n");
                }
                bw.close();
            } catch (IOException ex) {
                Logger.getLogger(frmsalesreport.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    out.close();
                } catch (IOException ex) {
                    Logger.getLogger(frmsalesreport.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnexcelKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmsalesreport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmsalesreport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmsalesreport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmsalesreport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmsalesreport().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnclose;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnexcel;
    private javax.swing.JButton btnopen;
    private javax.swing.JButton btnprint;
    private javax.swing.JCheckBox chkdelete;
    private javax.swing.JCheckBox chksearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblreport;
    private javax.swing.JTextField txtdelete;
    private javax.swing.JTextField txtinvoice;
    // End of variables declaration//GEN-END:variables
}
