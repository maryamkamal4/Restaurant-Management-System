/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package RMS;

import com.itextpdf.text.Chunk;
import java.awt.List;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.awt.print.Printable;
import java.awt.print.*;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import java.io.FileOutputStream;
import java.io.OutputStream;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Color;
import java.awt.event.KeyEvent;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author OBAID
 */
public class frmsalesinvoice extends javax.swing.JFrame {

    static String id;
    static String sr = "1";
    static String ts;

    /**
     * Creates new form frmsalesinvoice
     */
    public frmsalesinvoice() throws FileNotFoundException {
        initComponents();
        this.setLocationRelativeTo(null);
        this.getContentPane().setBackground(new Color(255, 255, 255));
        DefaultTableCellRenderer MyHeaderRender = new DefaultTableCellRenderer();
        MyHeaderRender.setBackground(new Color(0, 0, 0));
        MyHeaderRender.setForeground(new Color(255, 255, 255));
        tblsales.getTableHeader().getColumnModel().getColumn(0).setHeaderRenderer(MyHeaderRender);
        tblsales.getTableHeader().getColumnModel().getColumn(1).setHeaderRenderer(MyHeaderRender);
        tblsales.getTableHeader().getColumnModel().getColumn(2).setHeaderRenderer(MyHeaderRender);
        tblsales.getTableHeader().getColumnModel().getColumn(3).setHeaderRenderer(MyHeaderRender);
        tblsales.getTableHeader().getColumnModel().getColumn(4).setHeaderRenderer(MyHeaderRender);
        tblsales.getTableHeader().getColumnModel().getColumn(5).setHeaderRenderer(MyHeaderRender);
        tblsales.getTableHeader().getColumnModel().getColumn(6).setHeaderRenderer(MyHeaderRender);
        tblimport.setTableHeader(null);
        sr = "1";
        DateFormat datefor = new SimpleDateFormat("yyyyMMdd");
        DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
        Date date = new Date();
        txtdate.setText(dateFormat.format(date));
        File myObj = new File("Resources/Resource.txt");
        try ( Scanner myReader = new Scanner(myObj)) {
            while (myReader.hasNextLine()) {
                id = (myReader.nextLine());
            }
        }
        File myObj1 = new File("Resources/TotalSales.txt");
        try ( Scanner myReader1 = new Scanner(myObj1)) {
            while (myReader1.hasNextLine()) {
                ts = (myReader1.nextLine());
            }
        }
        txtid.setEditable(false);
        txtdate.setEditable(false);
        txtsr.setEditable(false);
        txtcat.setEditable(false);
        txtamount.setEditable(false);
        txtttlamount.setEditable(false);
        txtdis2.setEditable(false);
        txttotal.setEditable(false);
        txtrecipt.setEditable(false);
        txtid.setText(datefor.format(date) + id);
        txtsr.setText(sr);
        txtname.requestFocus();
        this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        txtname = new javax.swing.JTextField();
        txtno = new javax.swing.JTextField();
        txtcnic = new javax.swing.JTextField();
        txtaddress = new javax.swing.JTextField();
        txtpid = new javax.swing.JTextField();
        txtpn = new javax.swing.JTextField();
        txtprice = new javax.swing.JTextField();
        txtqty = new javax.swing.JTextField();
        btnadd = new javax.swing.JButton();
        txtdis1 = new javax.swing.JTextField();
        btnbill = new javax.swing.JButton();
        btnnew = new javax.swing.JButton();
        lblid = new javax.swing.JLabel();
        lblname = new javax.swing.JLabel();
        lblno = new javax.swing.JLabel();
        lblcnic = new javax.swing.JLabel();
        lbladdress = new javax.swing.JLabel();
        lbldate = new javax.swing.JLabel();
        txtid = new javax.swing.JTextField();
        txtdate = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblsales = new javax.swing.JTable();
        txtsr = new javax.swing.JTextField();
        txtcat = new javax.swing.JTextField();
        txtamount = new javax.swing.JTextField();
        btndelete = new javax.swing.JButton();
        txtdis2 = new javax.swing.JTextField();
        txttotal = new javax.swing.JTextField();
        txtttlamount = new javax.swing.JTextField();
        lbamount = new javax.swing.JLabel();
        lbldis1 = new javax.swing.JLabel();
        lbldis2 = new javax.swing.JLabel();
        lbltotal = new javax.swing.JLabel();
        btnclear = new javax.swing.JButton();
        btnclose = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtfile = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblimport = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtrecipt = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setFocusCycleRoot(true);

        txtname.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtname.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtname.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtname.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        txtno.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtno.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtno.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtno.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        txtcnic.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtcnic.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtcnic.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtcnic.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        txtaddress.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtaddress.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtaddress.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtaddress.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtaddress.setNextFocusableComponent(txtpid);

        txtpid.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtpid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtpid.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtpid.setNextFocusableComponent(txtpn);
        txtpid.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtpidFocusLost(evt);
            }
        });
        txtpid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtpidKeyPressed(evt);
            }
        });

        txtpn.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtpn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtpn.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtpn.setNextFocusableComponent(txtprice);
        txtpn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtpnKeyPressed(evt);
            }
        });

        txtprice.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtprice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtprice.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtprice.setNextFocusableComponent(txtqty);

        txtqty.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtqty.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtqty.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtqty.setNextFocusableComponent(btnadd);
        txtqty.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtqtyFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtqtyFocusLost(evt);
            }
        });
        txtqty.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtqtyInputMethodTextChanged(evt);
            }
        });
        txtqty.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtqtyPropertyChange(evt);
            }
        });
        txtqty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtqtyKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtqtyKeyTyped(evt);
            }
        });

        btnadd.setIcon(new javax.swing.ImageIcon("D:\\Restaurant Managment System Oop Project\\RMS\\Resources\\plus (2).png")); // NOI18N
        btnadd.setNextFocusableComponent(txtdis1);
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });
        btnadd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnaddKeyPressed(evt);
            }
        });

        txtdis1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtdis1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtdis1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtdis1.setNextFocusableComponent(btnbill);
        txtdis1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtdis1FocusLost(evt);
            }
        });
        txtdis1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdis1ActionPerformed(evt);
            }
        });

        btnbill.setIcon(new javax.swing.ImageIcon("D:\\Restaurant Managment System Oop Project\\RMS\\Resources\\printer.png")); // NOI18N
        btnbill.setText("Print");
        btnbill.setNextFocusableComponent(btnnew);
        btnbill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbillActionPerformed(evt);
            }
        });
        btnbill.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnbillKeyPressed(evt);
            }
        });

        btnnew.setIcon(new javax.swing.ImageIcon("D:\\Restaurant Managment System Oop Project\\RMS\\Resources\\tick.png")); // NOI18N
        btnnew.setText("New");
        btnnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnewActionPerformed(evt);
            }
        });
        btnnew.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnnewKeyPressed(evt);
            }
        });

        lblid.setText("Invoice no");

        lblname.setText("Customer name");

        lblno.setText("Phone no");

        lblcnic.setText("Cnic");

        lbladdress.setText("Address");

        lbldate.setText("Date");

        txtid.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtid.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtid.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        txtdate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtdate.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtdate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtdate.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane2.setViewportView(null);

        tblsales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sr no", "Product id", "Product name", "Category", "Price", "Qty", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblsales.setFocusable(false);
        tblsales.setShowGrid(false);
        tblsales.getTableHeader().setReorderingAllowed(false);
        tblsales.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblsalesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblsales);

        txtsr.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtsr.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtsr.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        txtcat.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtcat.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtcat.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        txtamount.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtamount.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtamount.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        btndelete.setIcon(new javax.swing.ImageIcon("D:\\Restaurant Managment System Oop Project\\RMS\\Resources\\minus.png")); // NOI18N
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });
        btndelete.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btndeleteKeyPressed(evt);
            }
        });

        txtdis2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtdis2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtdis2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        txttotal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txttotal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txttotal.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        txtttlamount.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtttlamount.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtttlamount.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        lbamount.setText("Total Amount");

        lbldis1.setText("Discount %");

        lbldis2.setText("Discounted amount");

        lbltotal.setText("Gross Total");

        btnclear.setIcon(new javax.swing.ImageIcon("D:\\Restaurant Managment System Oop Project\\RMS\\Resources\\remove.png")); // NOI18N
        btnclear.setText("Clear");
        btnclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclearActionPerformed(evt);
            }
        });
        btnclear.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnclearKeyPressed(evt);
            }
        });

        btnclose.setIcon(new javax.swing.ImageIcon("D:\\Restaurant Managment System Oop Project\\RMS\\Resources\\close.png")); // NOI18N
        btnclose.setText("Close");
        btnclose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncloseActionPerformed(evt);
            }
        });
        btnclose.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btncloseKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(lblcnic)
                        .addGap(35, 35, 35)
                        .addComponent(txtcnic, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(lblid)
                        .addGap(18, 18, 18)
                        .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(lblname)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblno)
                            .addComponent(lbldate))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtno, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtdate, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lbladdress)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtaddress, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(lbamount)
                                .addGap(72, 72, 72)
                                .addComponent(lbldis1))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(txtttlamount, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtdis1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(txtdis2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txttotal, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(54, 54, 54))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(lbldis2)
                                .addGap(60, 60, 60)
                                .addComponent(lbltotal)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtsr, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtpid, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtpn, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtcat, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtprice, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtqty, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtamount, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnadd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btndelete, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addComponent(btnbill, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnnew, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnclear, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnclose, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtid, txtname});

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtdate, txtno});

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnadd, btndelete});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblid)
                    .addComponent(lbldate)
                    .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtdate, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblname)
                    .addComponent(lblno)
                    .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtno, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblcnic)
                    .addComponent(lbladdress)
                    .addComponent(txtcnic, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtaddress, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnadd)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtsr, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtpid, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtpn, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtcat, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtprice, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtqty, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtamount, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btndelete)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbldis1)
                    .addComponent(lbamount)
                    .addComponent(lbldis2)
                    .addComponent(lbltotal))
                .addGap(3, 3, 3)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txttotal, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtdis1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtttlamount, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtdis2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnbill, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnclear, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnclose, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnnew, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnadd, btndelete});

        txtfile.setBackground(new java.awt.Color(204, 204, 204));
        txtfile.setColumns(20);
        txtfile.setFont(new java.awt.Font("Tahoma", 0, 3)); // NOI18N
        txtfile.setRows(5);
        jScrollPane3.setViewportView(txtfile);

        jScrollPane4.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane4.setForeground(new java.awt.Color(204, 204, 204));

        tblimport.setForeground(new java.awt.Color(204, 204, 204));
        tblimport.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sr no", "Product id", "Product name", "Category"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblimport.setGridColor(new java.awt.Color(204, 204, 204));
        tblimport.setSelectionBackground(new java.awt.Color(204, 204, 204));
        tblimport.setSelectionForeground(new java.awt.Color(204, 204, 204));
        tblimport.setShowGrid(false);
        tblimport.getTableHeader().setReorderingAllowed(false);
        tblimport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblimportMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblimport);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtrecipt.setColumns(20);
        txtrecipt.setFont(new java.awt.Font("Times New Roman", 0, 9)); // NOI18N
        txtrecipt.setRows(5);
        jScrollPane1.setViewportView(txtrecipt);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Sales Invoice");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(30, 30, 30)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(922, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(21, 21, 21)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 623, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(329, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 11, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(188, 188, 188)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(340, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(201, 201, 201)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(120, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btncloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncloseActionPerformed
        dispose();
        //new frmdashboard().setVisible(true);
    }//GEN-LAST:event_btncloseActionPerformed

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed

    }//GEN-LAST:event_formMousePressed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged

    }//GEN-LAST:event_formMouseDragged

    private void btnnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnewActionPerformed
        DefaultTableModel model = (DefaultTableModel) tblsales.getModel();
        String ttlamount = txtttlamount.getText();
        String disc = txtdis2.getText();
        String total = txttotal.getText();
        String idd = txtid.getText();
        String date1 = txtdate.getText();
        String name1 = txtname.getText();
        String no = txtno.getText();
        String cnic = txtcnic.getText();
        String address = txtaddress.getText();
        id = String.valueOf(Integer.parseInt(id) + 1);
        DateFormat datefor = new SimpleDateFormat("yyyyMMdd");
        Date date = new Date();
        txtid.setText(datefor.format(date) + id);
        sr = "1";
        txtsr.setText(sr);
        try {
            File myObj = new File("Files/Sales report.txt");
            if (myObj.createNewFile()) {
                FileWriter myWriter = new FileWriter("Files/Sales report.txt");
                myWriter.write(idd + "," + date1 + "," + name1 + "," + no + "," + disc + "," + total);
                myWriter.close();
            } else {
                BufferedReader in;
                try {
                    in = new BufferedReader(new FileReader("Files/Sales report.txt"));

                    String line = in.readLine();
                    while (line != null) {
                        txtfile.append(line + "\n");
                        line = in.readLine();
                    }
                    FileWriter myWriter1 = new FileWriter("Files/Sales report.txt");
                    BufferedWriter bufferWritter = new BufferedWriter(myWriter1);
                    bufferWritter.write("");
                    bufferWritter.write(txtfile.getText());
                    bufferWritter.write(idd + "," + date1 + "," + name1 + "," + no + "," + disc + "," + total);
                    bufferWritter.close();
                    myWriter1.close();

                } catch (FileNotFoundException ex) {
                    Logger.getLogger(frmsalesinvoice.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            FileWriter myobj;
                myobj = new FileWriter("Resources/Resource.txt");
                myobj.write("");
                myobj.write(id);
                myobj.close();
                ts = String.valueOf(Double.parseDouble(ts) + Double.parseDouble(txttotal.getText()));
                FileWriter myobj2 = new FileWriter("Resources/TotalSales.txt");
                myobj2.write("");
                myobj2.write(ts);
                myobj2.close();

            File myObj1 = new File("Files/Sales invoice/" + idd + ".pdf");

            Document document = new Document(PageSize.A5);

            OutputStream outputStream
                    = new FileOutputStream(myObj1);
            try {
                PdfWriter.getInstance(document, outputStream);
            } catch (DocumentException ex) {
                Logger.getLogger(frmsalesinvoice.class.getName()).log(Level.SEVERE, null, ex);
            }
            document.open();
            try {
                document.add(new Paragraph("--------------------------------------------------------------------------------------\n                          Restaurant Managment System         \n---------------------------------------------------------------------------------------"));
                document.add(new Paragraph("Invoice no: " + idd + "\nDate: " + date1 + "\nCustomer name: " + name1 + "\nMobile no: " + no + "\nCnic: " + cnic + "\nAddress: " + address + "\n--------------------------------------------------------------------------------------"));
                PdfPTable tab = new PdfPTable(5);
                tab.setWidths(new int[]{1, 2, 1, 1, 1});
                tab.addCell("Id");
                tab.addCell("Product");
                tab.addCell("Price");
                tab.addCell("Qty");
                tab.addCell("Amount");
                for (int i = 0; i < tblsales.getRowCount(); i++) {
                    Object obj1 = tblsales.getModel().getValueAt(i, 1);
                    Object obj2 = tblsales.getModel().getValueAt(i, 2);
                    Object obj3 = tblsales.getModel().getValueAt(i, 4);
                    Object obj4 = tblsales.getModel().getValueAt(i, 5);
                    Object obj5 = tblsales.getModel().getValueAt(i, 6);
                    String value1 = obj1.toString();
                    String value2 = obj2.toString();
                    String value3 = obj3.toString();
                    String value4 = obj4.toString();
                    String value5 = obj5.toString();
                    tab.addCell(value1);
                    tab.addCell(value2);
                    tab.addCell(value3);
                    tab.addCell(value4);
                    tab.addCell(value5);
                }
                document.add(tab);
                document.add(new Paragraph("--------------------------------------------------------------------------------------\n" + "                                                           Total Amount: " + ttlamount + "\n                                                           Discount: " + disc + "\n                                                           Gross Total: " + total));
                document.add(new Paragraph("--------------------------------------------------------------------------------------\n                                       Made by Grp13         \n---------------------------------------------------------------------------------------"));
            } catch (DocumentException ex) {
                Logger.getLogger(frmsalesinvoice.class.getName()).log(Level.SEVERE, null, ex);
            }
            document.close();
            outputStream.close();

        } catch (IOException e) {
            System.out.println("An error occurred.");
            e.printStackTrace();
        }
        txtname.setText("");
        txtno.setText("");
        txtcnic.setText("");
        txtaddress.setText("");
        txtpid.setText("");
        txtpn.setText("");
        txtcat.setText("");
        txtprice.setText("");
        txtqty.setText("");
        txtamount.setText("");
        txtttlamount.setText("");
        txtdis1.setText("");
        txtdis2.setText("");
        txttotal.setText("");
        txtrecipt.setText("");
        txtfile.setText("");
        model.setRowCount(0);
        txtname.requestFocus();

    }//GEN-LAST:event_btnnewActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // this.setEnabled(true);
    }//GEN-LAST:event_formWindowActivated

    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed

        DefaultTableModel model = (DefaultTableModel) tblsales.getModel();
        String total = "0";
        if (tblsales.getSelectionModel().isSelectionEmpty()) {
            String no = txtsr.getText().trim();
            String pid = txtpid.getText().trim();
            String name = txtpn.getText().trim();
            String cat = txtcat.getText().trim();
            String price = txtprice.getText().trim();
            String quantity = txtqty.getText().trim();
            String amount = txtamount.getText().trim();
            String st[] = {no, pid, name, cat, price, quantity, amount};
            model.addRow(st);
            for (int i = 0; i < tblsales.getRowCount(); i++) {

                int Amount = Integer.parseInt(tblsales.getValueAt(i, 6) + "");
                total = String.valueOf(Amount + Integer.parseInt(total));
            }
            txtttlamount.setText(total);
            sr = String.valueOf(Integer.parseInt(sr) + 1);
            txtsr.setText(sr);
            txtpid.setText("");
            txtpid.setText("");
            txtpn.setText("");
            txtcat.setText("");
            txtprice.setText("");
            txtqty.setText("");
            txtamount.setText("");
            txtpid.requestFocus();
        } else {
            int k = tblsales.getSelectedRow();
            model.setValueAt(txtsr.getText(), k, 0);
            model.setValueAt(txtpid.getText(), k, 1);
            model.setValueAt(txtpn.getText(), k, 2);
            model.setValueAt(txtcat.getText(), k, 3);
            model.setValueAt(txtprice.getText(), k, 4);
            model.setValueAt(txtqty.getText(), k, 5);
            model.setValueAt(txtamount.getText(), k, 6);
            for (int i = 0; i < tblsales.getRowCount(); i++) {

                int Amount = Integer.parseInt(tblsales.getValueAt(i, 6) + "");
                total = String.valueOf(Amount + Integer.parseInt(total));
            }
            txtttlamount.setText(total);
            txtsr.setText(sr);
            txtpid.setText("");
            txtpid.setText("");
            txtpn.setText("");
            txtcat.setText("");
            txtprice.setText("");
            txtqty.setText("");
            txtamount.setText("");
            txtpid.requestFocus();
        }

    }//GEN-LAST:event_btnaddActionPerformed

    private void btnclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclearActionPerformed
        DefaultTableModel model = (DefaultTableModel) tblsales.getModel();
        sr = "1";
        txtsr.setText(sr);
        txtname.setText("");
        txtno.setText("");
        txtcnic.setText("");
        txtaddress.setText("");
        txtpid.setText("");
        txtpn.setText("");
        txtcat.setText("");
        txtprice.setText("");
        txtqty.setText("");
        txtamount.setText("");
        txtttlamount.setText("");
        txtdis1.setText("");
        txtdis2.setText("");
        txttotal.setText("");
        txtrecipt.setText("");
        model.setRowCount(0);
        txtname.requestFocus();
    }//GEN-LAST:event_btnclearActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        DefaultTableModel model = (DefaultTableModel) tblsales.getModel();
        if (tblsales.getSelectedRow() != -1) {
            // remove selected row from the model
            model.removeRow(tblsales.getSelectedRow());
            JOptionPane.showMessageDialog(null, "Selected row deleted successfully");
        }
        String total = "0";
        for (int i = 0; i < tblsales.getRowCount(); i++) {

            int Amount = Integer.parseInt(tblsales.getValueAt(i, 6) + "");
            total = String.valueOf(Amount + Integer.parseInt(total));
        }
        txtttlamount.setText(total);
        txtpn.requestFocus();
    }//GEN-LAST:event_btndeleteActionPerformed

    private void txtqtyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtqtyKeyPressed

    }//GEN-LAST:event_txtqtyKeyPressed

    private void txtqtyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtqtyKeyTyped

    }//GEN-LAST:event_txtqtyKeyTyped

    private void txtqtyInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtqtyInputMethodTextChanged

    }//GEN-LAST:event_txtqtyInputMethodTextChanged

    private void txtqtyPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtqtyPropertyChange

    }//GEN-LAST:event_txtqtyPropertyChange

    private void txtqtyFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtqtyFocusGained

    }//GEN-LAST:event_txtqtyFocusGained

    private void txtqtyFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtqtyFocusLost
        int pr = Integer.parseInt(txtprice.getText());
        int qt = Integer.parseInt(txtqty.getText());
        String total = String.valueOf(pr * qt);
        txtamount.setText(total);
    }//GEN-LAST:event_txtqtyFocusLost

    private void btnaddKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnaddKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            DefaultTableModel model = (DefaultTableModel) tblsales.getModel();
            String total = "0";
            if (tblsales.getSelectionModel().isSelectionEmpty()) {
                String no = txtsr.getText().trim();
                String pid = txtpid.getText().trim();
                String name = txtpn.getText().trim();
                String cat = txtcat.getText().trim();
                String price = txtprice.getText().trim();
                String quantity = txtqty.getText().trim();
                String amount = txtamount.getText().trim();
                String st[] = {no, pid, name, cat, price, quantity, amount};
                model.addRow(st);
                for (int i = 0; i < tblsales.getRowCount(); i++) {

                    int Amount = Integer.parseInt(tblsales.getValueAt(i, 6) + "");
                    total = String.valueOf(Amount + Integer.parseInt(total));
                }
                txtttlamount.setText(total);
                sr = String.valueOf(Integer.parseInt(sr) + 1);
                txtsr.setText(sr);
                txtpid.setText("");
                txtpid.setText("");
                txtpn.setText("");
                txtcat.setText("");
                txtprice.setText("");
                txtqty.setText("");
                txtamount.setText("");
                txtpid.requestFocus();
            } else {
                int k = tblsales.getSelectedRow();
                model.setValueAt(txtsr.getText(), k, 0);
                model.setValueAt(txtpid.getText(), k, 1);
                model.setValueAt(txtpn.getText(), k, 2);
                model.setValueAt(txtcat.getText(), k, 3);
                model.setValueAt(txtprice.getText(), k, 4);
                model.setValueAt(txtqty.getText(), k, 5);
                model.setValueAt(txtamount.getText(), k, 6);
                for (int i = 0; i < tblsales.getRowCount(); i++) {

                    int Amount = Integer.parseInt(tblsales.getValueAt(i, 6) + "");
                    total = String.valueOf(Amount + Integer.parseInt(total));
                }
                txtttlamount.setText(total);
                txtsr.setText(sr);
                txtpid.setText("");
                txtpid.setText("");
                txtpn.setText("");
                txtcat.setText("");
                txtprice.setText("");
                txtqty.setText("");
                txtamount.setText("");
                txtpid.requestFocus();
            }
        }
    }//GEN-LAST:event_btnaddKeyPressed

    private void tblsalesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblsalesMouseClicked
        int i = tblsales.getSelectedRow();
        TableModel model = tblsales.getModel();
        txtsr.setText(model.getValueAt(i, 0).toString());
        txtpid.setText(model.getValueAt(i, 1).toString());
        txtpn.setText(model.getValueAt(i, 2).toString());
        txtcat.setText(model.getValueAt(i, 3).toString());
        txtprice.setText(model.getValueAt(i, 4).toString());
        txtqty.setText(model.getValueAt(i, 5).toString());
        txtamount.setText(model.getValueAt(i, 6).toString());
    }//GEN-LAST:event_tblsalesMouseClicked

    private void txtdis1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtdis1FocusLost
        double pr = Double.parseDouble(txtdis1.getText());
        double qt = Double.parseDouble(txtttlamount.getText());
        //double at = Double.parseDouble(txtdis2.getText());
        String disc = String.valueOf((pr / 100) * qt);
        txtdis2.setText(disc);
        String total = String.valueOf(qt - ((pr / 100) * qt));
        txttotal.setText(total);
        txtdis1.setText(String.valueOf(pr) + "%");
    }//GEN-LAST:event_txtdis1FocusLost

    private void btnbillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbillActionPerformed

        String ttlamount = txtttlamount.getText();
        String disc = txtdis2.getText();
        String total = txttotal.getText();
        String idd = txtid.getText();
        String date = txtdate.getText();
        String name = txtname.getText();
        String no = txtno.getText();
        String cnic = txtcnic.getText();
        String address = txtaddress.getText();
        DefaultTableModel model = new DefaultTableModel();

        model = (DefaultTableModel) tblsales.getModel();

        txtrecipt.setText(txtrecipt.getText() + "------------------------------------------------------------------------------------------\n");
        txtrecipt.setText(txtrecipt.getText() + "                               Restaurant Managment System                                \n");
        txtrecipt.setText(txtrecipt.getText() + "------------------------------------------------------------------------------------------\n");

        txtrecipt.setText(txtrecipt.getText() + "Invoice no: " + idd + "\n");
        txtrecipt.setText(txtrecipt.getText() + "Date: " + date + "\n");
        txtrecipt.setText(txtrecipt.getText() + "Customer name: " + name + "\n");
        txtrecipt.setText(txtrecipt.getText() + "Mobile no: " + no + "\n");
        txtrecipt.setText(txtrecipt.getText() + "Cnic: " + cnic + "\n");
        txtrecipt.setText(txtrecipt.getText() + "Address: " + address + "\n");
        txtrecipt.setText(txtrecipt.getText() + "------------------------------------------------------------------------------------------\n");

        txtrecipt.setText(txtrecipt.getText() + "Id" + "\t" + "Product" + "\t     " + "Price" + "\t" + "Qty" + "\t" + "Amount" + "\n");

        for (int i = 0; i < model.getRowCount(); i++) {
            String pid = (String) model.getValueAt(i, 1);
            String pname = (String) model.getValueAt(i, 2);
            String price = (String) model.getValueAt(i, 4);
            String qty = (String) model.getValueAt(i, 5);
            String amount = (String) model.getValueAt(i, 6);

            txtrecipt.setText(txtrecipt.getText() + pid + "\t" + pname + "\t      " + price + "\t" + qty + "\t" + amount + "\n");

        }
        txtrecipt.setText(txtrecipt.getText() + "------------------------------------------------------------------------------------------\n");

        txtrecipt.setText(txtrecipt.getText() + " \t " + " \t " + " \t " + "Total amount: " + ttlamount + "\n");
        txtrecipt.setText(txtrecipt.getText() + " \t " + " \t " + " \t " + "Discount: " + disc + "\n");
        txtrecipt.setText(txtrecipt.getText() + " \t " + " \t " + " \t " + "Gross Total: " + total + "\n");
        txtrecipt.setText(txtrecipt.getText() + "------------------------------------------------------------------------------------------\n");
        txtrecipt.setText(txtrecipt.getText() + "                                          Made by Grp13                                   \n");
        txtrecipt.setText(txtrecipt.getText() + "------------------------------------------------------------------------------------------\n");

        try {
            txtrecipt.print();

        } catch (PrinterException ex) {
            Logger.getLogger(frmsalesinvoice.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
        txtrecipt.setText("");
    }//GEN-LAST:event_btnbillActionPerformed

    private void txtdis1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdis1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdis1ActionPerformed

    private void btnbillKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnbillKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String ttlamount = txtttlamount.getText();
            String disc = txtdis2.getText();
            String total = txttotal.getText();
            String idd = txtid.getText();
            String date = txtdate.getText();
            String name = txtname.getText();
            String no = txtno.getText();
            String cnic = txtcnic.getText();
            String address = txtaddress.getText();
            DefaultTableModel model = new DefaultTableModel();

            model = (DefaultTableModel) tblsales.getModel();

            txtrecipt.setText(txtrecipt.getText() + "------------------------------------------------------------------------------------------\n");
            txtrecipt.setText(txtrecipt.getText() + "                               Restaurant Managment System                                \n");
            txtrecipt.setText(txtrecipt.getText() + "------------------------------------------------------------------------------------------\n");

            txtrecipt.setText(txtrecipt.getText() + "Invoice no: " + idd + "\n");
            txtrecipt.setText(txtrecipt.getText() + "Date: " + date + "\n");
            txtrecipt.setText(txtrecipt.getText() + "Customer name: " + name + "\n");
            txtrecipt.setText(txtrecipt.getText() + "Mobile no: " + no + "\n");
            txtrecipt.setText(txtrecipt.getText() + "Cnic: " + cnic + "\n");
            txtrecipt.setText(txtrecipt.getText() + "Address: " + address + "\n");
            txtrecipt.setText(txtrecipt.getText() + "------------------------------------------------------------------------------------------\n");

            txtrecipt.setText(txtrecipt.getText() + "Id" + "\t" + "Product" + "\t     " + "Price" + "\t" + "Qty" + "\t" + "Amount" + "\n");

            for (int i = 0; i < model.getRowCount(); i++) {
                String pid = (String) model.getValueAt(i, 1);
                String pname = (String) model.getValueAt(i, 2);
                String price = (String) model.getValueAt(i, 4);
                String qty = (String) model.getValueAt(i, 5);
                String amount = (String) model.getValueAt(i, 6);

                txtrecipt.setText(txtrecipt.getText() + pid + "\t" + pname + "\t      " + price + "\t" + qty + "\t" + amount + "\n");

            }
            txtrecipt.setText(txtrecipt.getText() + "------------------------------------------------------------------------------------------\n");

            txtrecipt.setText(txtrecipt.getText() + " \t " + " \t " + " \t " + "Total amount: " + ttlamount + "\n");
            txtrecipt.setText(txtrecipt.getText() + " \t " + " \t " + " \t " + "Discount: " + disc + "\n");
            txtrecipt.setText(txtrecipt.getText() + " \t " + " \t " + " \t " + "Gross Total: " + total + "\n");
            txtrecipt.setText(txtrecipt.getText() + "------------------------------------------------------------------------------------------\n");
            txtrecipt.setText(txtrecipt.getText() + "                                          Made by Grp13                                   \n");
            txtrecipt.setText(txtrecipt.getText() + "------------------------------------------------------------------------------------------\n");

            try {
                txtrecipt.print();

            } catch (PrinterException ex) {
                Logger.getLogger(frmsalesinvoice.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
            txtrecipt.setText("");
        }
    }//GEN-LAST:event_btnbillKeyPressed

    private void btnnewKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnnewKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            DefaultTableModel model = (DefaultTableModel) tblsales.getModel();
            String ttlamount = txtttlamount.getText();
            String disc = txtdis2.getText();
            String total = txttotal.getText();
            String idd = txtid.getText();
            String date1 = txtdate.getText();
            String name1 = txtname.getText();
            String no = txtno.getText();
            String cnic = txtcnic.getText();
            String address = txtaddress.getText();
            id = String.valueOf(Integer.parseInt(id) + 1);
            DateFormat datefor = new SimpleDateFormat("yyyyMMdd");
            Date date = new Date();
            txtid.setText(datefor.format(date) + id);
            sr = "1";
            txtsr.setText(sr);
            try {
                File myObj = new File("Files/Sales report.txt");
                if (myObj.createNewFile()) {
                    FileWriter myWriter = new FileWriter("Files/Sales report.txt");
                    myWriter.write(idd + "," + date1 + "," + name1 + "," + no + "," + disc + "," + total);
                    myWriter.close();
                } else {
                    BufferedReader in;
                    try {
                        in = new BufferedReader(new FileReader("Files/Sales report.txt"));

                        String line = in.readLine();
                        while (line != null) {
                            txtfile.append(line + "\n");
                            line = in.readLine();
                        }
                        FileWriter myWriter1 = new FileWriter("Files/Sales report.txt");
                        BufferedWriter bufferWritter = new BufferedWriter(myWriter1);
                        bufferWritter.write("");
                        bufferWritter.write(txtfile.getText());
                        bufferWritter.write(idd + "," + date1 + "," + name1 + "," + no + "," + disc + "," + total);
                        bufferWritter.close();
                        myWriter1.close();

                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(frmsalesinvoice.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                FileWriter myobj;

                    myobj = new FileWriter("Resources/Resource.txt");
                    myobj.write("");
                    myobj.write(id);
                    myobj.close();
                ts = String.valueOf(Double.parseDouble(ts) + Double.parseDouble(txttotal.getText()));
                    FileWriter myobj3 = new FileWriter("Resources/TotalSales.txt");
                    myobj3.write("");
                    myobj3.write(ts);
                    myobj3.close();

                File myObj1 = new File("Files/Sales invoice/" + idd + ".pdf");

                Document document = new Document(PageSize.A5);

                OutputStream outputStream
                        = new FileOutputStream(myObj1);
                try {
                    PdfWriter.getInstance(document, outputStream);
                } catch (DocumentException ex) {
                    Logger.getLogger(frmsalesinvoice.class.getName()).log(Level.SEVERE, null, ex);
                }
                document.open();
                try {
                    document.add(new Paragraph("--------------------------------------------------------------------------------------\n                          Restaurant Managment System         \n---------------------------------------------------------------------------------------"));
                    document.add(new Paragraph("Invoice no: " + idd + "\nDate: " + date1 + "\nCustomer name: " + name1 + "\nMobile no: " + no + "\nCnic: " + cnic + "\nAddress: " + address + "\n--------------------------------------------------------------------------------------"));
                    PdfPTable tab = new PdfPTable(5);
                    tab.setWidths(new int[]{1, 2, 1, 1, 1});
                    tab.addCell("Id");
                    tab.addCell("Product");
                    tab.addCell("Price");
                    tab.addCell("Qty");
                    tab.addCell("Amount");
                    for (int i = 0; i < tblsales.getRowCount(); i++) {
                        Object obj1 = tblsales.getModel().getValueAt(i, 1);
                        Object obj2 = tblsales.getModel().getValueAt(i, 2);
                        Object obj3 = tblsales.getModel().getValueAt(i, 4);
                        Object obj4 = tblsales.getModel().getValueAt(i, 5);
                        Object obj5 = tblsales.getModel().getValueAt(i, 6);
                        String value1 = obj1.toString();
                        String value2 = obj2.toString();
                        String value3 = obj3.toString();
                        String value4 = obj4.toString();
                        String value5 = obj5.toString();
                        tab.addCell(value1);
                        tab.addCell(value2);
                        tab.addCell(value3);
                        tab.addCell(value4);
                        tab.addCell(value5);
                    }
                    document.add(tab);
                    document.add(new Paragraph("--------------------------------------------------------------------------------------\n" + "                                                           Total Amount: " + ttlamount + "\n                                                           Discount: " + disc + "\n                                                           Gross Total: " + total));
                    document.add(new Paragraph("--------------------------------------------------------------------------------------\n                                       Made by Grp13         \n---------------------------------------------------------------------------------------"));
                } catch (DocumentException ex) {
                    Logger.getLogger(frmsalesinvoice.class.getName()).log(Level.SEVERE, null, ex);
                }
                document.close();
                outputStream.close();

            } catch (IOException e) {
                System.out.println("An error occurred.");
                e.printStackTrace();
            }
            txtname.setText("");
            txtno.setText("");
            txtcnic.setText("");
            txtaddress.setText("");
            txtpid.setText("");
            txtpn.setText("");
            txtcat.setText("");
            txtprice.setText("");
            txtqty.setText("");
            txtamount.setText("");
            txtttlamount.setText("");
            txtdis1.setText("");
            txtdis2.setText("");
            txttotal.setText("");
            txtrecipt.setText("");
            txtfile.setText("");
            model.setRowCount(0);
            txtname.requestFocus();
        }
    }//GEN-LAST:event_btnnewKeyPressed

    private void btnclearKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnclearKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            DefaultTableModel model = (DefaultTableModel) tblsales.getModel();
            sr = "1";
            txtsr.setText(sr);
            txtname.setText("");
            txtno.setText("");
            txtcnic.setText("");
            txtaddress.setText("");
            txtpid.setText("");
            txtpn.setText("");
            txtcat.setText("");
            txtprice.setText("");
            txtqty.setText("");
            txtamount.setText("");
            txtttlamount.setText("");
            txtdis1.setText("");
            txtdis2.setText("");
            txttotal.setText("");
            txtrecipt.setText("");
            model.setRowCount(0);
            txtname.requestFocus();
        }
    }//GEN-LAST:event_btnclearKeyPressed

    private void btncloseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btncloseKeyPressed
        dispose();
        //new frmdashboard().setVisible(true);
    }//GEN-LAST:event_btncloseKeyPressed

    private void btndeleteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btndeleteKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            DefaultTableModel model = (DefaultTableModel) tblsales.getModel();
            if (tblsales.getSelectedRow() != -1) {
                // remove selected row from the model
                model.removeRow(tblsales.getSelectedRow());
                JOptionPane.showMessageDialog(null, "Selected row deleted successfully");
            }
            String total = "0";
            for (int i = 0; i < tblsales.getRowCount(); i++) {

                int Amount = Integer.parseInt(tblsales.getValueAt(i, 6) + "");
                total = String.valueOf(Amount + Integer.parseInt(total));
            }
            txtttlamount.setText(total);
            txtpn.requestFocus();
        }
    }//GEN-LAST:event_btndeleteKeyPressed

    private void txtpnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpnKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            //this.setEnabled(false);
            new frmpn().setVisible(true);
        }
    }//GEN-LAST:event_txtpnKeyPressed

    private void tblimportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblimportMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblimportMouseClicked

    private void txtpidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpidKeyPressed

    }//GEN-LAST:event_txtpidKeyPressed

    private void txtpidFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtpidFocusLost
        String abc=txtpid.getText();
        if (!(abc.length()==0)) {
        txtpn.setText("");
        txtcat.setText("");
        txtprice.setText("");
        BufferedReader br = null;
        try {
            br = new BufferedReader(new FileReader("Files/Fooditem.txt"));
            DefaultTableModel model = (DefaultTableModel) tblimport.getModel();
            Object[] tableLines = br.lines().toArray();
            for (int i = 0; i < tableLines.length; i++) {
                String line = tableLines[i].toString().trim();
                String[] dataRow = line.split(",");
                model.addRow(dataRow);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(frmsalesinvoice.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                br.close();
            } catch (IOException ex) {
                Logger.getLogger(frmsalesinvoice.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        DefaultTableModel model = (DefaultTableModel) tblimport.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<>(model);
        tblimport.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(txtpid.getText().trim()));
        int r = 0;
        int modelRow = tblimport.convertRowIndexToModel(r);
        String value1 = tblimport.getModel().getValueAt(modelRow, 1).toString();
        String value2 = tblimport.getModel().getValueAt(modelRow, 3).toString();
        String value3 = tblimport.getModel().getValueAt(modelRow, 2).toString();
        txtpn.setText(value1);
        txtcat.setText(value2);
        txtprice.setText(value3);
        model.setRowCount(0);
        }   
    }//GEN-LAST:event_txtpidFocusLost

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
    }//GEN-LAST:event_formWindowGainedFocus

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed

    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

    }//GEN-LAST:event_formWindowClosing

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmsalesinvoice.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmsalesinvoice.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmsalesinvoice.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmsalesinvoice.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new frmsalesinvoice().setVisible(true);

                } catch (FileNotFoundException ex) {
                    Logger.getLogger(frmsalesinvoice.class
                            .getName()).log(Level.SEVERE, null, ex);
                }

            }

        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btnbill;
    private javax.swing.JButton btnclear;
    private javax.swing.JButton btnclose;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnnew;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lbamount;
    private javax.swing.JLabel lbladdress;
    private javax.swing.JLabel lblcnic;
    private javax.swing.JLabel lbldate;
    private javax.swing.JLabel lbldis1;
    private javax.swing.JLabel lbldis2;
    private javax.swing.JLabel lblid;
    private javax.swing.JLabel lblname;
    private javax.swing.JLabel lblno;
    private javax.swing.JLabel lbltotal;
    private javax.swing.JTable tblimport;
    private javax.swing.JTable tblsales;
    private javax.swing.JTextField txtaddress;
    private javax.swing.JTextField txtamount;
    public static javax.swing.JTextField txtcat;
    private javax.swing.JTextField txtcnic;
    private javax.swing.JTextField txtdate;
    private javax.swing.JTextField txtdis1;
    private javax.swing.JTextField txtdis2;
    private javax.swing.JTextArea txtfile;
    private javax.swing.JTextField txtid;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtno;
    public static javax.swing.JTextField txtpid;
    public static javax.swing.JTextField txtpn;
    public static javax.swing.JTextField txtprice;
    private javax.swing.JTextField txtqty;
    private javax.swing.JTextArea txtrecipt;
    private javax.swing.JTextField txtsr;
    private javax.swing.JTextField txttotal;
    private javax.swing.JTextField txtttlamount;
    // End of variables declaration//GEN-END:variables
}
